# deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: my-worker-2
  labels:
    app: my-worker-2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-worker-2
  template:
    metadata:
      labels:
        app: my-worker-2
    spec:
      containers:
      - name: my-worker-2
        image: spark-worker:3.3.0
        imagePullPolicy: IfNotPresent
        # command: [ "/bin/bash", "-c", "--" ]
        # args: [ "while true; do sleep 30; done;" ]
        ports:
        - containerPort: 8081
          name: worker
        volumeMounts:
        - name: hdfs
          mountPath: /opt/workspace
        - name: event-log
          mountPath: /opt/log
        env:
        - name: SPARK_MASTER_HOST
          value: "my-master"
        - name: SPARK_MASTER_PORT
          value: "7077"          
        - name: SPARK_WORKER_CORES
          value: "1"
        - name: SPARK_WORKER_MEMORY
          value: "512m"   
        resources: {}          
      volumes:
      - name: hdfs
        persistentVolumeClaim:
          claimName: hdfs
      - name: event-log
        persistentVolumeClaim:
          claimName: event-log       
---
# svc
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: my-worker-2
spec:
  selector:
    app: my-worker-2
  ports:
  - port: 8081
    targetPort: 8081
    name: worker
---
# ingress
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: my-spark-master
#   labels:
#     name: my-spark-master
# spec:
#   rules:
#   - host: master.127-0-0-1.nip.io
#     http:
#       paths:
#       - pathType: Prefix
#         path: "/"
#         backend:
#           service:
#             name: my-master
#             port: 
#               number: 8080
